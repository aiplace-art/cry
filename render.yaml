services:
  # Backend API Service
  - type: web
    name: hyped-token-backend
    env: node
    region: oregon
    plan: starter
    buildCommand: npm ci && npm run compile
    startCommand: npm run start:backend
    healthCheckPath: /health
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3000
      - key: DATABASE_URL
        fromDatabase:
          name: hyped-token-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: hyped-token-redis
          property: connectionString
      - key: CONTRACT_ADDRESS
        sync: false
      - key: SEPOLIA_RPC_URL
        sync: false
      - key: ETHERSCAN_API_KEY
        sync: false
      - key: JWT_SECRET
        generateValue: true
      - key: SESSION_SECRET
        generateValue: true

  # Redis Cache
  - type: redis
    name: hyped-token-redis
    region: oregon
    plan: starter
    maxmemoryPolicy: allkeys-lru
    ipAllowList: []

databases:
  # PostgreSQL Database
  - name: hyped-token-postgres
    region: oregon
    plan: starter
    databaseName: hyped_token
    user: hyped_token_user
    ipAllowList: []

# Cron Jobs
cronjobs:
  - name: sync-blockchain-events
    schedule: "*/5 * * * *"  # Every 5 minutes
    buildCommand: npm ci
    startCommand: npm run cron:sync-events
    envVars:
      - key: NODE_ENV
        value: production
      - key: CONTRACT_ADDRESS
        sync: false
      - key: SEPOLIA_RPC_URL
        sync: false

  - name: update-token-prices
    schedule: "*/10 * * * *"  # Every 10 minutes
    buildCommand: npm ci
    startCommand: npm run cron:update-prices
    envVars:
      - key: NODE_ENV
        value: production
