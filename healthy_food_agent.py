#!/usr/bin/env python3
"""
–ê–≥–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å–∞ –ø–æ –ø–æ–ª–µ–∑–Ω–æ–º—É –ø–∏—Ç–∞–Ω–∏—é
–ü–æ–º–æ–≥–∞–µ—Ç —Å —Ä–∞—Å—á–µ—Ç–æ–º –∫–∞–ª–æ—Ä–∏–π, —Å–æ–∑–¥–∞–Ω–∏–µ–º –º–µ–Ω—é, –ø–æ—Å—Ç–æ–≤ –¥–ª—è Instagram –∏ –ø–ª–∞–∫–∞—Ç–æ–≤
"""

import json
from datetime import datetime
from typing import Dict, List, Optional
import re

class HealthyFoodAgent:
    def __init__(self):
        self.business_name = ""
        self.contact_info = {}
        self.menu_items = []
        
        # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–∫–∫–∞–ª –Ω–∞ 100–≥)
        self.calories_db = {
            # –ú—è—Å–æ –∏ –ø—Ç–∏—Ü–∞
            '–∫—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞': {'calories': 165, 'protein': 31, 'fat': 3.6, 'carbs': 0},
            '–∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ': {'calories': 165, 'protein': 31, 'fat': 3.6, 'carbs': 0},
            '–∫—É—Ä–∏–Ω—ã–π —Ñ–∞—Ä—à': {'calories': 143, 'protein': 17.4, 'fat': 8.1, 'carbs': 0},
            '–≥–æ–≤—è–¥–∏–Ω–∞': {'calories': 250, 'protein': 26, 'fat': 15, 'carbs': 0},
            '–≥–æ–≤—è–∂–∏–π —Å—Ç–µ–π–∫': {'calories': 250, 'protein': 26, 'fat': 15, 'carbs': 0},
            '—Ñ–∞—Ä—à –±–∞—Ä–∞–Ω–∏–Ω–∞': {'calories': 282, 'protein': 17, 'fat': 23, 'carbs': 0},
            '—Ñ–∞—Ä—à –≥–æ–≤—è–¥–∏–Ω–∞': {'calories': 254, 'protein': 17.2, 'fat': 20, 'carbs': 0},
            '–∏–Ω–¥–µ–π–∫–∞': {'calories': 157, 'protein': 21.6, 'fat': 7.3, 'carbs': 0},
            '—Ñ–∏–ª–µ –∏–Ω–¥–µ–π–∫–∏': {'calories': 157, 'protein': 21.6, 'fat': 7.3, 'carbs': 0},
            
            # –†—ã–±–∞ –∏ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã
            '–ª–æ—Å–æ—Å—å': {'calories': 208, 'protein': 20, 'fat': 13, 'carbs': 0},
            '—Ñ–∏–ª–µ –ª–æ—Å–æ—Å—è': {'calories': 208, 'protein': 20, 'fat': 13, 'carbs': 0},
            '—Ç—Ä–µ—Å–∫–∞': {'calories': 78, 'protein': 17.7, 'fat': 0.7, 'carbs': 0},
            '—Ñ–∏–ª–µ —Ç—Ä–µ—Å–∫–∏': {'calories': 78, 'protein': 17.7, 'fat': 0.7, 'carbs': 0},
            '—Ñ–æ—Ä–µ–ª—å': {'calories': 97, 'protein': 19.2, 'fat': 2.1, 'carbs': 0},
            '—Ñ–∏–ª–µ —Ñ–æ—Ä–µ–ª–∏': {'calories': 97, 'protein': 19.2, 'fat': 2.1, 'carbs': 0},
            
            # –ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
            '—è–π—Ü–æ': {'calories': 155, 'protein': 13, 'fat': 11, 'carbs': 1.1},
            '—Ç–≤–æ—Ä–æ–≥': {'calories': 103, 'protein': 18, 'fat': 4, 'carbs': 3.4},
            '–º–æ–ª–æ–∫–æ –Ω–µ–∂–∏—Ä–Ω–æ–µ': {'calories': 31, 'protein': 3, 'fat': 0.1, 'carbs': 4.7},
            '–º–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ': {'calories': 717, 'protein': 0.8, 'fat': 82.5, 'carbs': 0.8},
            
            # –ö—Ä—É–ø—ã –∏ –∑–µ—Ä–Ω–æ–≤—ã–µ
            '—Ä–∏—Å': {'calories': 130, 'protein': 2.7, 'fat': 0.3, 'carbs': 28},
            '—Ä–∏—Å —Å—É—Ö–æ–π': {'calories': 344, 'protein': 7.5, 'fat': 2.6, 'carbs': 74},
            '–≥—Ä–µ—á–∫–∞': {'calories': 343, 'protein': 13, 'fat': 3.4, 'carbs': 62},
            '–≥—Ä–µ—á–∫–∞ —Å—É—Ö–∞—è': {'calories': 343, 'protein': 13, 'fat': 3.4, 'carbs': 62},
            '–æ–≤—Å—è–Ω–∫–∞': {'calories': 389, 'protein': 17, 'fat': 6.9, 'carbs': 66},
            '–±—É–ª–≥—É—Ä': {'calories': 342, 'protein': 12.3, 'fat': 1.3, 'carbs': 75.9},
            '–±—É–ª–≥—É—Ä —Å—É—Ö–æ–π': {'calories': 342, 'protein': 12.3, 'fat': 1.3, 'carbs': 75.9},
            '–∫–∏–Ω–æ–∞': {'calories': 368, 'protein': 14.1, 'fat': 6.1, 'carbs': 64.2},
            '–∫–∏–Ω–æ–∞ —Å—É—Ö–∞—è': {'calories': 368, 'protein': 14.1, 'fat': 6.1, 'carbs': 64.2},
            '—Ö–ª–µ–± —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤–æ–π': {'calories': 213, 'protein': 7.4, 'fat': 1.2, 'carbs': 41},
            
            # –û–≤–æ—â–∏
            '–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å': {'calories': 77, 'protein': 2, 'fat': 0.1, 'carbs': 17},
            '–±—Ä–æ–∫–∫–æ–ª–∏': {'calories': 34, 'protein': 2.8, 'fat': 0.4, 'carbs': 7},
            '–∫–∞–±–∞—á–æ–∫': {'calories': 17, 'protein': 1.2, 'fat': 0.3, 'carbs': 4.6},
            '—Ç—ã–∫–≤–∞': {'calories': 26, 'protein': 1, 'fat': 0.1, 'carbs': 6.5},
            '—Ç–æ–º–∞—Ç—ã': {'calories': 18, 'protein': 0.9, 'fat': 0.2, 'carbs': 3.9},
            '–ø–æ–º–∏–¥–æ—Ä': {'calories': 18, 'protein': 0.9, 'fat': 0.2, 'carbs': 3.9},
            '–ø–æ–º–∏–¥–æ—Ä—ã': {'calories': 18, 'protein': 0.9, 'fat': 0.2, 'carbs': 3.9},
            '–æ–≥—É—Ä—Ü—ã': {'calories': 16, 'protein': 0.7, 'fat': 0.1, 'carbs': 4},
            '–æ–≥—É—Ä–µ—Ü': {'calories': 16, 'protein': 0.7, 'fat': 0.1, 'carbs': 4},
            '–ø–µ—Ä–µ—Ü –±–æ–ª–≥–∞—Ä—Å–∫–∏–π': {'calories': 27, 'protein': 1.3, 'fat': 0, 'carbs': 5.3},
            '–ø–µ—Ä–µ—Ü': {'calories': 27, 'protein': 1.3, 'fat': 0, 'carbs': 5.3},
            '–ª—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π': {'calories': 41, 'protein': 1.4, 'fat': 0, 'carbs': 10.4},
            '–ª—É–∫': {'calories': 41, 'protein': 1.4, 'fat': 0, 'carbs': 10.4},
            '–º–æ—Ä–∫–æ–≤—å': {'calories': 35, 'protein': 1.3, 'fat': 0.1, 'carbs': 6.9},
            '—Å–ø–∞—Ä–∂–∞': {'calories': 20, 'protein': 1.9, 'fat': 0.1, 'carbs': 3.4},
            '—à–ø–∏–Ω–∞—Ç': {'calories': 22, 'protein': 2.9, 'fat': 0.4, 'carbs': 2.0},
            '–∑–µ–ª–µ–Ω—å': {'calories': 36, 'protein': 3.7, 'fat': 0.4, 'carbs': 5.2},
            '–ø–µ—Ç—Ä—É—à–∫–∞': {'calories': 36, 'protein': 3.7, 'fat': 0.4, 'carbs': 7.6},
            '–∫–∏–Ω–∑–∞': {'calories': 23, 'protein': 2.1, 'fat': 0.5, 'carbs': 3.7},
            '–∑–µ–ª—ë–Ω—ã–π –≥–æ—Ä–æ—à–µ–∫': {'calories': 81, 'protein': 5, 'fat': 0.4, 'carbs': 14.5},
            
            # –§—Ä—É–∫—Ç—ã
            '–∞–≤–æ–∫–∞–¥–æ': {'calories': 160, 'protein': 2, 'fat': 15, 'carbs': 9},
            '–∞–Ω–∞–Ω–∞—Å': {'calories': 50, 'protein': 0.5, 'fat': 0.2, 'carbs': 13.1},
            '–∞–Ω–∞–Ω–∞—Å —Å–≤–µ–∂–∏–π': {'calories': 50, 'protein': 0.5, 'fat': 0.2, 'carbs': 13.1},
            
            # –ú–∞—Å–ª–∞ –∏ –∂–∏—Ä—ã
            '–æ–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ': {'calories': 884, 'protein': 0, 'fat': 100, 'carbs': 0},
            '—Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –º–∞—Å–ª–æ': {'calories': 899, 'protein': 0, 'fat': 99.9, 'carbs': 0},
            
            # –°–ø–µ—Ü–∏–∏ –∏ –ø—Ä–∏–ø—Ä–∞–≤—ã
            '—á–µ—Å–Ω–æ–∫': {'calories': 149, 'protein': 6.5, 'fat': 0.5, 'carbs': 33},
            '—Å–æ–µ–≤—ã–π —Å–æ—É—Å': {'calories': 8, 'protein': 1.3, 'fat': 0, 'carbs': 0.8},
            '–º–µ–¥': {'calories': 304, 'protein': 0.3, 'fat': 0, 'carbs': 82.4},
            '–∫—É–Ω–∂—É—Ç': {'calories': 573, 'protein': 17.7, 'fat': 49.7, 'carbs': 23.4},
            '–ª–∏–º–æ–Ω–Ω—ã–π —Å–æ–∫': {'calories': 16, 'protein': 0.4, 'fat': 0.1, 'carbs': 3}
        }
    
    def setup_business(self, name: str, phone: str, instagram: str, address: str = ""):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∏–∑–Ω–µ—Å–µ"""
        self.business_name = name
        self.contact_info = {
            'phone': phone,
            'instagram': instagram,
            'address': address
        }
        print(f"‚úÖ –ë–∏–∑–Ω–µ—Å '{name}' –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
    
    def calculate_nutrition(self, ingredients: Dict[str, float]) -> Dict[str, float]:
        """
        –†–∞—Å—á–µ—Ç –ë–ñ–£ –∏ –∫–∞–ª–æ—Ä–∏–π –¥–ª—è –±–ª—é–¥–∞
        ingredients: {'–ø—Ä–æ–¥—É–∫—Ç': –≤–µ—Å_–≤_–≥—Ä–∞–º–º–∞—Ö}
        """
        total_nutrition = {'calories': 0, 'protein': 0, 'fat': 0, 'carbs': 0}
        
        for ingredient, weight in ingredients.items():
            ingredient_lower = ingredient.lower()
            if ingredient_lower in self.calories_db:
                nutrition = self.calories_db[ingredient_lower]
                # –†–∞—Å—á–µ—Ç –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤–µ—Å
                for key in total_nutrition:
                    total_nutrition[key] += nutrition[key] * weight / 100
        
        return {
            'calories': round(total_nutrition['calories'], 1),
            'protein': round(total_nutrition['protein'], 1),
            'fat': round(total_nutrition['fat'], 1),
            'carbs': round(total_nutrition['carbs'], 1)
        }
    
    def add_menu_item(self, name: str, ingredients: Dict[str, float], price: int, description: str = ""):
        """–î–æ–±–∞–≤–∏—Ç—å –±–ª—é–¥–æ –≤ –º–µ–Ω—é"""
        nutrition = self.calculate_nutrition(ingredients)
        
        menu_item = {
            'name': name,
            'ingredients': ingredients,
            'nutrition': nutrition,
            'price': price,
            'description': description
        }
        
        self.menu_items.append(menu_item)
        print(f"‚úÖ –ë–ª—é–¥–æ '{name}' –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –º–µ–Ω—é!")
        print(f"   üìä {nutrition['calories']} –∫–∫–∞–ª | –ë: {nutrition['protein']}–≥ | –ñ: {nutrition['fat']}–≥ | –£: {nutrition['carbs']}–≥")
    
    def generate_menu_display(self) -> str:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ –º–µ–Ω—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        if not self.menu_items:
            return "‚ùå –ú–µ–Ω—é –ø—É—Å—Ç–æ–µ. –î–æ–±–∞–≤—å—Ç–µ –±–ª—é–¥–∞!"
        
        menu_text = f"""
üçΩÔ∏è –ú–ï–ù–Æ {self.business_name.upper()}
{'=' * 50}

"""
        
        for item in self.menu_items:
            nutrition = item['nutrition']
            menu_text += f"""
ü•ó {item['name'].upper()}
{item['description']}

üìä –ü–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å:
‚Ä¢ –ö–∞–ª–æ—Ä–∏–∏: {nutrition['calories']} –∫–∫–∞–ª
‚Ä¢ –ë–µ–ª–∫–∏: {nutrition['protein']}–≥
‚Ä¢ –ñ–∏—Ä—ã: {nutrition['fat']}–≥  
‚Ä¢ –£–≥–ª–µ–≤–æ–¥—ã: {nutrition['carbs']}–≥

üí∞ –¶–µ–Ω–∞: {item['price']} —Ä—É–±.
{'‚îÄ' * 40}
"""
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
        menu_text += f"""
üìû –ö–û–ù–¢–ê–ö–¢–´:
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {self.contact_info.get('phone', '–Ω–µ —É–∫–∞–∑–∞–Ω')}
‚Ä¢ Instagram: @{self.contact_info.get('instagram', '–Ω–µ —É–∫–∞–∑–∞–Ω')}
"""
        
        if self.contact_info.get('address'):
            menu_text += f"‚Ä¢ –ê–¥—Ä–µ—Å: {self.contact_info['address']}\n"
        
        menu_text += "\nüì± –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!"
        
        return menu_text
    
    def generate_instagram_post(self, dish_name: str, style: str = "–∑–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ") -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–∞ –¥–ª—è Instagram"""
        dish = next((item for item in self.menu_items if item['name'].lower() == dish_name.lower()), None)
        
        if not dish:
            return f"‚ùå –ë–ª—é–¥–æ '{dish_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –º–µ–Ω—é!"
        
        nutrition = dish['nutrition']
        
        # –í—ã–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∏–ª—è
        emoji_sets = {
            "–∑–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ": ["ü•ó", "üå±", "üíö", "üçÉ", "‚ú®"],
            "—Ñ–∏—Ç–Ω–µ—Å": ["üí™", "üî•", "üèãÔ∏è", "ü•á", "‚ö°"],
            "–¥–∏–µ—Ç–∞": ["üåø", "ü•í", "ü•ë", "üçã", "üí´"]
        }
        
        emojis = emoji_sets.get(style, emoji_sets["–∑–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ"])
        
        post = f"""{emojis[0]} {dish['name'].upper()} {emojis[1]}

{dish['description']}

üìä –ü–ò–©–ï–í–ê–Ø –¶–ï–ù–ù–û–°–¢–¨ –ù–ê –ü–û–†–¶–ò–Æ:
{emojis[2]} –ö–∞–ª–æ—Ä–∏–∏: {nutrition['calories']} –∫–∫–∞–ª
ü•© –ë–µ–ª–∫–∏: {nutrition['protein']}–≥  
ü•ë –ñ–∏—Ä—ã: {nutrition['fat']}–≥
üåæ –£–≥–ª–µ–≤–æ–¥—ã: {nutrition['carbs']}–≥

üí∞ –¶–µ–Ω–∞: {dish['price']} —Ä—É–±.

{emojis[3]} –ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø–æ–ª–µ–∑–Ω—É—é –µ–¥—É —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π!
{emojis[4]} –ö–∞–∂–¥–æ–µ –±–ª—é–¥–æ - —ç—Ç–æ –∑–∞–±–æ—Ç–∞ –æ –≤–∞—à–µ–º –∑–¥–æ—Ä–æ–≤—å–µ!

üìû –ó–∞–∫–∞–∑: {self.contact_info.get('phone', '—Å—Å—ã–ª–∫–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ')}

#–∑–¥–æ—Ä–æ–≤–æ–µ–ø–∏—Ç–∞–Ω–∏–µ #–ø–ø #–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ–ø–∏—Ç–∞–Ω–∏–µ #–ø–æ–ª–µ–∑–Ω–∞—è–µ–¥–∞ #—Ñ–∏—Ç–Ω–µ—Å–µ–¥–∞ 
#–¥–æ—Å—Ç–∞–≤–∫–∞–µ–¥—ã #{self.business_name.lower().replace(' ', '')} #–∫–∞–ª–æ—Ä–∏–∏ #–±–∂—É
#–∑–¥–æ—Ä–æ–≤—å–µ #–¥–∏–µ—Ç–∞ #–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π—Ä–∞—Ü–∏–æ–Ω #–¥–æ–º–∞—à–Ω—è—è–µ–¥–∞ #–≤–∫—É—Å–Ω–æ–∏–ø–æ–ª–µ–∑–Ω–æ
"""
        
        return post
    
    def create_promotional_flyer(self) -> str:
        """–°–æ–∑–¥–∞–Ω–∏–µ HTML-–º–∞–∫–µ—Ç–∞ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–ª–∞–∫–∞—Ç–∞"""
        if not self.menu_items:
            return "‚ùå –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –±–ª—é–¥–∞ –≤ –º–µ–Ω—é!"
        
        html_content = f"""
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ú–µ–Ω—é - {self.business_name}</title>
    <style>
        body {{
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 0;
            padding: 20px;
            color: white;
        }}
        
        .flyer {{
            max-width: 800px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            color: #333;
        }}
        
        .header {{
            text-align: center;
            margin-bottom: 30px;
        }}
        
        .business-name {{
            font-size: 2.5em;
            font-weight: bold;
            background: linear-gradient(45deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 10px;
        }}
        
        .subtitle {{
            font-size: 1.2em;
            color: #666;
            margin-bottom: 20px;
        }}
        
        .menu-grid {{
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }}
        
        .menu-item {{
            background: white;
            border: 2px solid #f0f0f0;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            transition: transform 0.3s ease;
        }}
        
        .menu-item:hover {{
            transform: translateY(-5px);
            border-color: #667eea;
        }}
        
        .dish-name {{
            font-size: 1.4em;
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
        }}
        
        .nutrition {{
            background: #f8f9ff;
            padding: 15px;
            border-radius: 10px;
            margin: 15px 0;
        }}
        
        .nutrition-row {{
            display: flex;
            justify-content: space-between;
            margin: 5px 0;
        }}
        
        .price {{
            font-size: 1.5em;
            font-weight: bold;
            color: #27ae60;
            text-align: center;
            margin-top: 15px;
        }}
        
        .contacts {{
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
        }}
        
        .contacts h3 {{
            margin-top: 0;
            font-size: 1.5em;
        }}
        
        .contact-info {{
            font-size: 1.1em;
            line-height: 1.8;
        }}
        
        .cta {{
            background: #e74c3c;
            color: white;
            padding: 15px 30px;
            border-radius: 50px;
            font-size: 1.2em;
            font-weight: bold;
            margin-top: 20px;
            display: inline-block;
            text-decoration: none;
            box-shadow: 0 5px 15px rgba(231, 76, 60, 0.3);
        }}
    </style>
</head>
<body>
    <div class="flyer">
        <div class="header">
            <h1 class="business-name">{self.business_name}</h1>
            <p class="subtitle">üçΩÔ∏è –ü–æ–ª–µ–∑–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ —Å –ø–æ–¥—Å—á–µ—Ç–æ–º –∫–∞–ª–æ—Ä–∏–π üå±</p>
        </div>
        
        <div class="menu-grid">
"""
        
        # –î–æ–±–∞–≤–ª—è–µ–º –±–ª—é–¥–∞
        for item in self.menu_items:
            nutrition = item['nutrition']
            html_content += f"""
            <div class="menu-item">
                <h3 class="dish-name">ü•ó {item['name']}</h3>
                <p>{item['description']}</p>
                
                <div class="nutrition">
                    <div class="nutrition-row">
                        <span><strong>–ö–∞–ª–æ—Ä–∏–∏:</strong></span>
                        <span>{nutrition['calories']} –∫–∫–∞–ª</span>
                    </div>
                    <div class="nutrition-row">
                        <span><strong>–ë–µ–ª–∫–∏:</strong></span>
                        <span>{nutrition['protein']}–≥</span>
                    </div>
                    <div class="nutrition-row">
                        <span><strong>–ñ–∏—Ä—ã:</strong></span>
                        <span>{nutrition['fat']}–≥</span>
                    </div>
                    <div class="nutrition-row">
                        <span><strong>–£–≥–ª–µ–≤–æ–¥—ã:</strong></span>
                        <span>{nutrition['carbs']}–≥</span>
                    </div>
                </div>
                
                <div class="price">üí∞ {item['price']} —Ä—É–±.</div>
            </div>
"""
        
        html_content += f"""
        </div>
        
        <div class="contacts">
            <h3>üìû –ö–û–ù–¢–ê–ö–¢–´ –î–õ–Ø –ó–ê–ö–ê–ó–ê</h3>
            <div class="contact-info">
                <p><strong>üì± –¢–µ–ª–µ—Ñ–æ–Ω:</strong> {self.contact_info.get('phone', '–Ω–µ —É–∫–∞–∑–∞–Ω')}</p>
                <p><strong>üì∏ Instagram:</strong> @{self.contact_info.get('instagram', '–Ω–µ —É–∫–∞–∑–∞–Ω')}</p>
"""
        
        if self.contact_info.get('address'):
            html_content += f"                <p><strong>üìç –ê–¥—Ä–µ—Å:</strong> {self.contact_info['address']}</p>\n"
        
        html_content += """
            </div>
            <div class="cta">üì± –ü–û–î–ü–ò–®–ò–°–¨ –ù–ê –ö–ê–ù–ê–õ!</div>
        </div>
    </div>
</body>
</html>
"""
        
        return html_content
    
    def save_flyer_to_file(self, filename: str = None) -> str:
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–ª–∞–µ—Ä–∞ –≤ HTML —Ñ–∞–π–ª"""
        if filename is None:
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            filename = f"flyer_{self.business_name.replace(' ', '_').lower()}_{timestamp}.html"
        
        html_content = self.create_promotional_flyer()
        
        if html_content.startswith("‚ùå"):
            return html_content
        
        try:
            with open(filename, 'w', encoding='utf-8') as f:
                f.write(html_content)
            return f"‚úÖ –§–ª–∞–µ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {filename}"
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}"
    
    def get_business_stats(self) -> str:
        """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ–Ω—é –∏ —Ü–µ–Ω–∞–º"""
        if not self.menu_items:
            return "‚ùå –ú–µ–Ω—é –ø—É—Å—Ç–æ–µ!"
        
        total_items = len(self.menu_items)
        avg_price = sum(item['price'] for item in self.menu_items) / total_items
        avg_calories = sum(item['nutrition']['calories'] for item in self.menu_items) / total_items
        
        min_price = min(item['price'] for item in self.menu_items)
        max_price = max(item['price'] for item in self.menu_items)
        
        stats = f"""
üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ú–ï–ù–Æ
{'=' * 30}

üìã –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª—é–¥: {total_items}
üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {avg_price:.0f} —Ä—É–±.
üìä –°—Ä–µ–¥–Ω—è—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å: {avg_calories:.0f} –∫–∫–∞–ª

üíµ –°–∞–º–æ–µ –¥–µ—à–µ–≤–æ–µ –±–ª—é–¥–æ: {min_price} —Ä—É–±.
üíé –°–∞–º–æ–µ –¥–æ—Ä–æ–≥–æ–µ –±–ª—é–¥–æ: {max_price} —Ä—É–±.

üè∑Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ü–µ–Ω—ã –¥–ª—è –Ω–æ–≤—ã—Ö –±–ª—é–¥: {int(avg_price * 0.8)}-{int(avg_price * 1.2)} —Ä—É–±.
"""
        return stats

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞
def demo_usage():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∞–≥–µ–Ω—Ç–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å–∞ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è!\n")
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    agent = HealthyFoodAgent()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–∏–∑–Ω–µ—Å
    agent.setup_business(
        name="Healthy Kitchen",
        phone="+7 (999) 123-45-67",
        instagram="healthy_kitchen_msk",
        address="–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ó–¥–æ—Ä–æ–≤—å—è, –¥. 1"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –±–ª—é–¥–∞ –≤ –º–µ–Ω—é
    agent.add_menu_item(
        name="–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å –æ–≤–æ—â–∞–º–∏",
        ingredients={"–∫—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞": 150, "–±—Ä–æ–∫–∫–æ–ª–∏": 100, "—Ç–æ–º–∞—Ç—ã": 50, "–æ–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ": 10},
        price=350,
        description="–ù–µ–∂–Ω–∞—è –∫—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å –ø–∞—Ä–æ–≤—ã–º–∏ –æ–≤–æ—â–∞–º–∏ –∏ —Ç–æ–º–∞—Ç–∞–º–∏"
    )
    
    agent.add_menu_item(
        name="–¢–≤–æ—Ä–æ–∂–Ω–∞—è –∑–∞–ø–µ–∫–∞–Ω–∫–∞",
        ingredients={"—Ç–≤–æ—Ä–æ–≥": 200, "—è–π—Ü–æ": 50, "–æ–≤—Å—è–Ω–∫–∞": 30},
        price=280,
        description="–í–æ–∑–¥—É—à–Ω–∞—è —Ç–≤–æ—Ä–æ–∂–Ω–∞—è –∑–∞–ø–µ–∫–∞–Ω–∫–∞ —Å –æ–≤—Å—è–Ω—ã–º–∏ —Ö–ª–æ–ø—å—è–º–∏"
    )
    
    print("\n" + "="*50)
    print(agent.generate_menu_display())
    print("="*50)
    
    return agent

if __name__ == "__main__":
    demo_usage()