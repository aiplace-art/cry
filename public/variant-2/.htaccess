# ==============================================================================
# HypeAI Dashboard - Security Headers Configuration
# Binance-Level Security Implementation
# ==============================================================================

# ------------------------------------------------------------------------------
# Content Security Policy (CSP)
# Prevents XSS attacks by controlling resource loading
# ------------------------------------------------------------------------------
<IfModule mod_headers.c>
    # Strict CSP for production security
    Header set Content-Security-Policy "\
        default-src 'self'; \
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com https://cdn.jsdelivr.net; \
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; \
        font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; \
        img-src 'self' data: https: blob:; \
        connect-src 'self' https://api.hypeai.io wss://ws.hypeai.io https://*.infura.io https://*.alchemy.com; \
        media-src 'self'; \
        object-src 'none'; \
        frame-src 'none'; \
        base-uri 'self'; \
        form-action 'self'; \
        frame-ancestors 'none'; \
        upgrade-insecure-requests;"

    # ------------------------------------------------------------------------------
    # Security Headers - Defense in Depth
    # ------------------------------------------------------------------------------

    # Prevent MIME type sniffing
    Header set X-Content-Type-Options "nosniff"

    # Prevent clickjacking attacks
    Header set X-Frame-Options "DENY"

    # Enable XSS filter in older browsers
    Header set X-XSS-Protection "1; mode=block"

    # Referrer policy for privacy
    Header set Referrer-Policy "strict-origin-when-cross-origin"

    # Permissions policy (formerly Feature-Policy)
    Header set Permissions-Policy "\
        geolocation=(), \
        microphone=(), \
        camera=(), \
        payment=(), \
        usb=(), \
        magnetometer=(), \
        gyroscope=(), \
        accelerometer=(), \
        ambient-light-sensor=(), \
        autoplay=(), \
        encrypted-media=(), \
        picture-in-picture=()"

    # Strict Transport Security (HSTS)
    # Force HTTPS for 2 years, include subdomains
    Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"

    # Expect-CT header for certificate transparency
    Header set Expect-CT "max-age=86400, enforce"

    # Remove server information leakage
    Header unset Server
    Header unset X-Powered-By

    # Cross-Origin headers
    Header set Cross-Origin-Opener-Policy "same-origin"
    Header set Cross-Origin-Embedder-Policy "require-corp"
    Header set Cross-Origin-Resource-Policy "same-origin"
</IfModule>

# ------------------------------------------------------------------------------
# Disable Directory Browsing
# ------------------------------------------------------------------------------
Options -Indexes

# ------------------------------------------------------------------------------
# Protect Sensitive Files
# ------------------------------------------------------------------------------
<FilesMatch "^(\.|htaccess|htpasswd|.*\.env|.*\.json|.*\.log|.*\.sql)">
    Require all denied
</FilesMatch>

# ------------------------------------------------------------------------------
# Prevent Access to Hidden Files (except .well-known)
# ------------------------------------------------------------------------------
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteCond %{REQUEST_URI} "!(^|/)\.well-known/([^./]+./?)+$" [NC]
    RewriteCond %{SCRIPT_FILENAME} -d [OR]
    RewriteCond %{SCRIPT_FILENAME} -f
    RewriteRule "(^|/)\." - [F]
</IfModule>

# ------------------------------------------------------------------------------
# Block Common Attack Patterns
# ------------------------------------------------------------------------------
<IfModule mod_rewrite.c>
    RewriteEngine On

    # Block SQL injection attempts
    RewriteCond %{QUERY_STRING} (\<|%3C).*script.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} (\||%7C) [NC,OR]
    RewriteCond %{QUERY_STRING} (union.*select|select.*union) [NC,OR]
    RewriteCond %{QUERY_STRING} (drop.*table|insert.*into) [NC]
    RewriteRule .* - [F,L]

    # Block file injection attempts
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=http:// [OR]
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=(\.\.//?)+ [OR]
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=/([a-z0-9_.]//?)+ [NC]
    RewriteRule .* - [F,L]

    # Block proxy/spam attempts
    RewriteCond %{HTTP_USER_AGENT} ^$ [OR]
    RewriteCond %{HTTP_USER_AGENT} (libwww-perl|python|nikto|scan|java|winhttp|clshttp|loader) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} (;|<|>|'|"|\)|\(|%0A|%0D|%27|%3C|%3E|%00) [NC]
    RewriteCond %{HTTP_USER_AGENT} !^.*internal\ [NC]
    RewriteCond %{HTTP_USER_AGENT} !^.*google.* [NC]
    RewriteRule .* - [F,L]
</IfModule>

# ------------------------------------------------------------------------------
# Rate Limiting (requires mod_ratelimit)
# ------------------------------------------------------------------------------
<IfModule mod_ratelimit.c>
    # Limit download speed to prevent bandwidth abuse
    # 500 KB/s per connection
    SetOutputFilter RATE_LIMIT
    SetEnv rate-limit 500
</IfModule>

# ------------------------------------------------------------------------------
# Compression (performance + security)
# ------------------------------------------------------------------------------
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/json
</IfModule>

# ------------------------------------------------------------------------------
# Cache Control
# ------------------------------------------------------------------------------
<IfModule mod_expires.c>
    ExpiresActive On

    # HTML - short cache
    ExpiresByType text/html "access plus 1 hour"

    # CSS/JS - longer cache
    ExpiresByType text/css "access plus 1 week"
    ExpiresByType application/javascript "access plus 1 week"

    # Images - long cache
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/svg+xml "access plus 1 month"

    # Fonts - very long cache
    ExpiresByType font/woff2 "access plus 1 year"
</IfModule>

# ------------------------------------------------------------------------------
# HTTPS Redirect (uncomment when SSL is active)
# ------------------------------------------------------------------------------
# <IfModule mod_rewrite.c>
#     RewriteEngine On
#     RewriteCond %{HTTPS} off
#     RewriteRule ^(.*)$ https://%{HTTP_HOST}/$1 [R=301,L]
# </IfModule>

# ------------------------------------------------------------------------------
# Custom Error Pages (optional)
# ------------------------------------------------------------------------------
# ErrorDocument 400 /errors/400.html
# ErrorDocument 401 /errors/401.html
# ErrorDocument 403 /errors/403.html
# ErrorDocument 404 /errors/404.html
# ErrorDocument 500 /errors/500.html

# ==============================================================================
# END OF SECURITY CONFIGURATION
# ==============================================================================
